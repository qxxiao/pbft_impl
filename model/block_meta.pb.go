// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block_meta.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockRequestType int32

const (
	BlockRequestType_default_type  BlockRequestType = 0
	BlockRequestType_only_header   BlockRequestType = 1
	BlockRequestType_whole_content BlockRequestType = 2
)

var BlockRequestType_name = map[int32]string{
	0: "default_type",
	1: "only_header",
	2: "whole_content",
}

var BlockRequestType_value = map[string]int32{
	"default_type":  0,
	"only_header":   1,
	"whole_content": 2,
}

func (x BlockRequestType) String() string {
	return proto.EnumName(BlockRequestType_name, int32(x))
}

func (BlockRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ce63c24a9154ceb, []int{0}
}

type BroadcastMsgType int32

const (
	BroadcastMsgType_unknown_msg BroadcastMsgType = 0
	// 共识相关
	BroadcastMsgType_send_pbft_msg   BroadcastMsgType = 1
	BroadcastMsgType_send_block_meta BroadcastMsgType = 2
	// tx
	BroadcastMsgType_send_tx BroadcastMsgType = 10
	// blockchain
	BroadcastMsgType_request_load_block  BroadcastMsgType = 20
	BroadcastMsgType_send_specific_block BroadcastMsgType = 21
)

var BroadcastMsgType_name = map[int32]string{
	0:  "unknown_msg",
	1:  "send_pbft_msg",
	2:  "send_block_meta",
	10: "send_tx",
	20: "request_load_block",
	21: "send_specific_block",
}

var BroadcastMsgType_value = map[string]int32{
	"unknown_msg":         0,
	"send_pbft_msg":       1,
	"send_block_meta":     2,
	"send_tx":             10,
	"request_load_block":  20,
	"send_specific_block": 21,
}

func (x BroadcastMsgType) String() string {
	return proto.EnumName(BroadcastMsgType_name, int32(x))
}

func (BroadcastMsgType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7ce63c24a9154ceb, []int{1}
}

type BlockMeta struct {
	BlockHeight          uint64      `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	CurVerfier           *Verifier   `protobuf:"bytes,2,opt,name=cur_verfier,json=curVerfier,proto3" json:"cur_verfier,omitempty"`
	VerifierNo           uint32      `protobuf:"varint,3,opt,name=verifier_no,json=verifierNo,proto3" json:"verifier_no,omitempty"`
	Verifiers            []*Verifier `protobuf:"bytes,4,rep,name=verifiers,proto3" json:"verifiers,omitempty"`
	LastView             uint64      `protobuf:"varint,5,opt,name=last_view,json=lastView,proto3" json:"last_view,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BlockMeta) Reset()         { *m = BlockMeta{} }
func (m *BlockMeta) String() string { return proto.CompactTextString(m) }
func (*BlockMeta) ProtoMessage()    {}
func (*BlockMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce63c24a9154ceb, []int{0}
}

func (m *BlockMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMeta.Unmarshal(m, b)
}
func (m *BlockMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMeta.Marshal(b, m, deterministic)
}
func (m *BlockMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMeta.Merge(m, src)
}
func (m *BlockMeta) XXX_Size() int {
	return xxx_messageInfo_BlockMeta.Size(m)
}
func (m *BlockMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMeta.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMeta proto.InternalMessageInfo

func (m *BlockMeta) GetBlockHeight() uint64 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func (m *BlockMeta) GetCurVerfier() *Verifier {
	if m != nil {
		return m.CurVerfier
	}
	return nil
}

func (m *BlockMeta) GetVerifierNo() uint32 {
	if m != nil {
		return m.VerifierNo
	}
	return 0
}

func (m *BlockMeta) GetVerifiers() []*Verifier {
	if m != nil {
		return m.Verifiers
	}
	return nil
}

func (m *BlockMeta) GetLastView() uint64 {
	if m != nil {
		return m.LastView
	}
	return 0
}

type BlockRequest struct {
	BlockNum             int64            `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	RequestType          BlockRequestType `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=BlockRequestType" json:"request_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce63c24a9154ceb, []int{1}
}

func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetBlockNum() int64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *BlockRequest) GetRequestType() BlockRequestType {
	if m != nil {
		return m.RequestType
	}
	return BlockRequestType_default_type
}

type BlockResponse struct {
	RequestType          BlockRequestType `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=BlockRequestType" json:"request_type,omitempty"`
	Block                *PbftBlock       `protobuf:"bytes,3,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ce63c24a9154ceb, []int{2}
}

func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (m *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(m, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetRequestType() BlockRequestType {
	if m != nil {
		return m.RequestType
	}
	return BlockRequestType_default_type
}

func (m *BlockResponse) GetBlock() *PbftBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterEnum("BlockRequestType", BlockRequestType_name, BlockRequestType_value)
	proto.RegisterEnum("BroadcastMsgType", BroadcastMsgType_name, BroadcastMsgType_value)
	proto.RegisterType((*BlockMeta)(nil), "BlockMeta")
	proto.RegisterType((*BlockRequest)(nil), "BlockRequest")
	proto.RegisterType((*BlockResponse)(nil), "BlockResponse")
}

func init() { proto.RegisterFile("block_meta.proto", fileDescriptor_7ce63c24a9154ceb) }

var fileDescriptor_7ce63c24a9154ceb = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcd, 0x72, 0xda, 0x30,
	0x14, 0x85, 0x23, 0x08, 0x6d, 0xb8, 0x82, 0xa2, 0x28, 0xfd, 0xf1, 0xb4, 0x8b, 0xba, 0x6c, 0xca,
	0xb0, 0x60, 0x41, 0xfb, 0x04, 0xac, 0xb2, 0x49, 0x26, 0xe3, 0xe9, 0x64, 0xd1, 0x8d, 0x46, 0xd8,
	0xd7, 0xe0, 0x89, 0x2d, 0xb9, 0xfa, 0x81, 0xf2, 0x08, 0x7d, 0xac, 0xbe, 0x59, 0xc7, 0x12, 0x0c,
	0x6d, 0x97, 0xd9, 0x59, 0xdf, 0x39, 0xf7, 0x58, 0x47, 0x73, 0x81, 0xad, 0x6b, 0x9d, 0x3f, 0x89,
	0x06, 0x9d, 0x5c, 0xb4, 0x46, 0x3b, 0xfd, 0x7e, 0x92, 0x6b, 0x65, 0x51, 0x59, 0x6f, 0x23, 0x98,
	0xfe, 0x26, 0x30, 0x5c, 0x75, 0xae, 0x3b, 0x74, 0x92, 0x7f, 0x82, 0x51, 0x1c, 0xd9, 0x62, 0xb5,
	0xd9, 0xba, 0x84, 0xa4, 0x64, 0x76, 0x99, 0xd1, 0xc0, 0x6e, 0x03, 0xe2, 0x73, 0xa0, 0xb9, 0x37,
	0x62, 0x87, 0xa6, 0xac, 0xd0, 0x24, 0xbd, 0x94, 0xcc, 0xe8, 0x72, 0xb8, 0xd8, 0xa1, 0xa9, 0x3a,
	0x90, 0x41, 0xee, 0xcd, 0x63, 0x14, 0xf9, 0x47, 0xa0, 0x27, 0x2e, 0x94, 0x4e, 0xfa, 0x29, 0x99,
	0x8d, 0x33, 0x38, 0xa1, 0x7b, 0xcd, 0x3f, 0xc3, 0xf0, 0x74, 0xb2, 0xc9, 0x65, 0xda, 0xff, 0x37,
	0xea, 0xac, 0xf1, 0x0f, 0x30, 0xac, 0xa5, 0x75, 0x62, 0x57, 0xe1, 0x3e, 0x19, 0x84, 0x5b, 0x5d,
	0x75, 0xe0, 0xb1, 0xc2, 0xfd, 0x54, 0xc2, 0x28, 0x54, 0xc8, 0xf0, 0x87, 0x47, 0xeb, 0x3a, 0x73,
	0x6c, 0xa1, 0x7c, 0x13, 0x2a, 0xf4, 0xb3, 0xab, 0x00, 0xee, 0x7d, 0xc3, 0xbf, 0xc2, 0xc8, 0x44,
	0x9f, 0x70, 0x87, 0x16, 0x43, 0x81, 0x57, 0xcb, 0xeb, 0xc5, 0xdf, 0x09, 0xdf, 0x0e, 0x2d, 0x66,
	0xd4, 0x9c, 0x0f, 0xd3, 0x0d, 0x8c, 0x8f, 0x06, 0xdb, 0x76, 0x2f, 0xf8, 0xbc, 0x18, 0x9e, 0xc2,
	0x20, 0x5c, 0x24, 0x3c, 0x05, 0x5d, 0xc2, 0xe2, 0x61, 0x5d, 0xba, 0x38, 0x12, 0x85, 0xf9, 0x2d,
	0xb0, 0xff, 0x23, 0x38, 0x83, 0x51, 0x81, 0xa5, 0xf4, 0x75, 0xfc, 0x17, 0xbb, 0xe0, 0x13, 0xa0,
	0x5a, 0xd5, 0x07, 0xb1, 0x45, 0x59, 0xa0, 0x61, 0x84, 0x5f, 0xc3, 0x78, 0xbf, 0xd5, 0x35, 0x8a,
	0x5c, 0x2b, 0x87, 0xca, 0xb1, 0xde, 0xfc, 0x17, 0x01, 0xb6, 0x32, 0x5a, 0x16, 0xb9, 0xb4, 0xee,
	0xce, 0x6e, 0x42, 0xd4, 0x04, 0xa8, 0x57, 0x4f, 0x4a, 0xef, 0x95, 0x68, 0xec, 0x86, 0x5d, 0x74,
	0x83, 0x16, 0x55, 0x21, 0xda, 0x75, 0xe9, 0x02, 0x22, 0xfc, 0x06, 0x26, 0x01, 0x9d, 0x97, 0x87,
	0xf5, 0x38, 0x85, 0x97, 0x01, 0xba, 0x9f, 0x0c, 0xf8, 0x5b, 0xe0, 0xa7, 0xf2, 0xb5, 0x96, 0x47,
	0x27, 0x7b, 0xcd, 0xdf, 0xc1, 0x4d, 0x30, 0xd9, 0x16, 0xf3, 0xaa, 0xac, 0xf2, 0xa3, 0xf0, 0x66,
	0xc5, 0x60, 0xd0, 0xe8, 0x02, 0xeb, 0x07, 0xf2, 0x3d, 0x7e, 0xac, 0x5f, 0x84, 0xf5, 0xfb, 0xf2,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x3b, 0xf5, 0xa8, 0xde, 0xa3, 0x02, 0x00, 0x00,
}
